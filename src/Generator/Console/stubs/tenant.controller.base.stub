<?php

namespace DummyNamespace;

use Illuminate\Http\Request;
use ServiceNamespace;
use Illuminate\Http\JsonResponse;
use App\Http\Controllers\Controller;

/**
 * @Author      yaangvu
 * @Date        DummyDate
 */
class DummyClass extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @param ServiceClass $service
     *
     * @return JsonResponse
     */
    public function index(ServiceClass $service): JsonResponse
    {
        return \response()->json($service->getAll());
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param Request      $request
     * @param ServiceClass $service
     *
     * @return JsonResponse
     */
    public function store(Request $request, ServiceClass $service): JsonResponse
    {
        return \response()->json($service->add($request))->setStatusCode(Response::HTTP_CREATED);
    }

    /**
     * Display the specified resource.
     *
     * @param              $id
     * @param ServiceClass $service
     *
     * @return JsonResponse
     */
    public function show($id, ServiceClass $service): JsonResponse
    {
        return \response()->json($service->get($id));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param              $id
     * @param Request      $request
     * @param ServiceClass $service
     *
     * @return JsonResponse
     */
    public function update($id, Request $request, ServiceClass $service): JsonResponse
    {
        return \response()->json($service->update($id, $request));
    }

    /**
     * Put Update the specified resource in storage.
     *
     * @param              $id
     * @param Request      $request
     * @param ServiceClass $service
     *
     * @return JsonResponse
     */
    public function putUpdate($id, Request $request, ServiceClass $service): JsonResponse
    {
        return \response()->json($service->putUpdate($id, $request));
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param              $id
     * @param ServiceClass $service
     *
     * @return JsonResponse
     */
    public function destroy($id, ServiceClass $service): JsonResponse
    {
        return \response()->json($service->delete($id));
    }

    /**
     * Remove the specified resource from storage by uuid
     *
     * @param              $uuid
     * @param ServiceClass $service
     *
     * @return JsonResponse
     */
    public function deleteByUuid($uuid, ServiceClass $service): JsonResponse
    {
        return \response()->json($service->deleteByUuid($uuid));
    }

    /**
     * Display the specified resource.
     *
     * @param              $uuid
     * @param ServiceClass $service
     *
     * @return JsonResponse
     */
    public function showByUuid($uuid, ServiceClass $service): JsonResponse
    {
        return \response()->json($service->getByUuid($uuid));
    }

    /**
     * Remove the multiple specified resource from storage by ids
     *
     * @param Request      $request
     * @param ServiceClass $service
     *
     * @return JsonResponse
     */
    public function deleteByIds(Request $request, ServiceClass $service): JsonResponse
    {
        return \response()->json($service->deleteByIds($request));
    }

    /**
     * Remove the multiple specified resource from storage by uuids
     *
     * @param Request      $request
     * @param ServiceClass $service
     *
     * @return JsonResponse
     */
    public function deleteByUuids(Request $request, ServiceClass $service): JsonResponse
    {
        return \response()->json($service->deleteByUuids($request));
    }
}
