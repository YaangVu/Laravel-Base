<?php

namespace DummyNamespace;

use Illuminate\Http\Request;
use App\Base\Controller;
use Illuminate\Http\JsonResponse;
use DummyFullModelClass;
use ServiceNamespace;

/**
 * @Author      yaangvu
 * @Date        DummyDate
 */
class DummyClass extends Controller
{

    /**
     * @var ServiceClass $service
     */
    public ServiceClass $service;

    /**
     * @param DummyModelClass $model
     */
    public function __construct(private readonly DummyModelClass $model)
    {
        parent::__construct($this->model);
        $this->service = new ServiceClass($this->model);
    }

    /**
     * @Description Display a listing of the DummyModelClass.
     *
     * @Author      yaangvu
     * @Date        DummyDate
     *
     * @return JsonResponse
     */
    public function index(): JsonResponse
    {
        return parent::index(); // TODO: Change the autogenerated stub
    }

    /**
     * @Description Display the specified DummyModelClass.
     *
     * @Author      yaangvu
     * @Date        DummyDate
     *
     * @param $id
     *
     * @return JsonResponse
     */
    public function show($id): JsonResponse
    {
        return parent::show($id); // TODO: Change the autogenerated stub
    }

    /**
     * @Description Store a newly created DummyModelClass in storage.
     *
     * @Author      yaangvu
     * @Date        DummyDate
     *
     * @param Request $request
     *
     * @return JsonResponse
     **/
    public function store(Request $request): JsonResponse
    {
        return parent::store($request); // TODO: Change the autogenerated stub
    }

    /**
     * @Description Update the specified DummyModelClass in storage.
     *
     * @Author      yaangvu
     * @Date        DummyDate
     *
     * @param         $id
     * @param Request $request
     *
     * @return JsonResponse
     **/
    public function update($id, Request $request): JsonResponse
    {
        return parent::update($id, $request); // TODO: Change the autogenerated stub
    }

    /**
     * @Description Put Update the specified DummyModelClass in storage.
     *
     * @Author      yaangvu
     * @Date        DummyDate
     *
     * @param         $id
     * @param Request $request
     *
     * @return JsonResponse
     **/
    public function putUpdate($id, Request $request): JsonResponse
    {
        return parent::putUpdate($id, $request); // TODO: Change the autogenerated stub
    }

    /**
     * @Description Remove the specified DummyModelClass from storage.
     *
     * @Author      yaangvu
     * @Date        DummyDate
     *
     * @param $id
     *
     * @return JsonResponse
     */
    public function destroy($id): JsonResponse
    {
        return parent::destroy($id); // TODO: Change the autogenerated stub
    }

    /**
     * @Description Remove the specified DummyModelClass from storage by uuid
     *
     * @Author      yaangvu
     * @Date        DummyDate
     *
     * @param $uuid
     *
     * @return JsonResponse
     */
    public function deleteByUuid($uuid): JsonResponse
    {
        return parent::deleteByUuid($uuid); // TODO: Change the autogenerated stub
    }

    /**
     * @Description Remove the multiple specified DummyModelClass from storage by ids
     *
     * @Author      yaangvu
     * @Date        DummyDate
     *
     * @param Request $request
     *
     * @return JsonResponse
     */
    public function deleteByIds(Request $request): JsonResponse
    {
        return parent::deleteByIds($request); // TODO: Change the autogenerated stub
    }

    /**
     * @Description Remove the multiple specified DummyModelClass from storage by uuids
     *
     * @Author      yaangvu
     * @Date        DummyDate
     *
     * @param Request $request
     *
     * @return JsonResponse
     */
    public function deleteByUuids(Request $request): JsonResponse
    {
        return parent::deleteByUuids($request); // TODO: Change the autogenerated stub
    }
}
