<?php

namespace DummyNamespace;

use Illuminate\Http\Request;
use App\Base\Controller;
use Illuminate\Http\JsonResponse;
use DummyFullModelClass;
use ServiceNamespace;

/**
 * @Author      yaangvu
 * @Date        DummyDate
 */
class DummyClass extends Controller
{

    /**
     * @var ServiceClass $service
     */
    public ServiceClass $service;

    /**
     * @param DummyModelClass $model
     */
    public function __construct(private readonly DummyModelClass $model)
    {
        parent::__construct($this->model);
        $this->service = new ServiceClass($this->model);
    }

    /**
     * @Description Display a listing of the DummyModelClass.
     *
     * @Author      yaangvu
     * @Date        DummyDate
     *
     * @return JsonResponse
     *
     *
     * @OA\Get (
     *   tags={"DummyTag"},
     *   path="/DummyPath",
     *   operationId="getAll{{ model }}",
     *   summary="Get all {{ model }}",
     *   description="Get all {{ model }}",
     *   security={{ "Bearer":{} }},
     *   @OA\Parameter(
     *      ref="#/components/parameters/asset--limit",
     *   ),
     *   @OA\Parameter(
     *      ref="#/components/parameters/general--page",
     *   ),
     *   @OA\Parameter(
     *      ref="#/components/parameters/asset--order_by",
     *   ),
     *   @OA\Response(
     *      response=200,
     *      description="Success",
     *      @OA\JsonContent(
     *        allOf={
     *          @OA\Schema(ref="#/components/schemas/Pagination"),
     *          @OA\Schema(
     *             @OA\Property(property="data", type="array", @OA\Items(ref="#/components/schemas/{{ model }}")),
     *          ),
     *        }
     *      )
     *   ),
     *   @OA\Response(
     *      response=400,
     *      description="Bad Request"
     *    ),
     *   @OA\Response(
     *      response=401,
     *      description="Unauthorized"
     *   ),
     *   @OA\Response(
     *      response=403,
     *      description="Forbidden"
     *    ),
     *   @OA\Response(
     *      response=404,
     *      description="Unauthorized"
     *   ),
     *   @OA\Response(
     *      response=500,
     *      description="Server Error"
     *   )
     * )
     */
    public function index(): JsonResponse
    {
        return parent::index(); // TODO: Change the autogenerated stub
    }

    /**
     * @Description Display the specified DummyModelClass.
     *
     * @Author      yaangvu
     * @Date        DummyDate
     *
     * @param $id
     *
     * @return JsonResponse
     *
     * @OA\Get(
     *    path="/DummyPath/{id}",
     *    operationId="getById{{ model }}",
     *    tags={"DummyTag"},
     *    summary="Get by id {{ model }}",
     *    description="Get by id {{ model }}",
     *    security={{ "Bearer":{} }},
     *    @OA\Parameter(
     *       ref="#/components/parameters/asset--sid",
     *    ),
     *   @OA\Response(
     *      response=200,
     *      description="Success",
     *      @OA\JsonContent(
     *          ref="#/components/schemas/{{ model }}"
     *      )
     *   ),
     *   @OA\Response(
     *      response=400,
     *      description="Bad Request"
     *    ),
     *   @OA\Response(
     *      response=401,
     *      description="Unauthorized"
     *   ),
     *   @OA\Response(
     *      response=403,
     *      description="Forbidden"
     *    ),
     *   @OA\Response(
     *      response=404,
     *      description="Unauthorized"
     *   ),
     *   @OA\Response(
     *      response=500,
     *      description="Server Error"
     *   )
     * )
     *
     */
    public function show($id): JsonResponse
    {
        return parent::show($id); // TODO: Change the autogenerated stub
    }

    /**
     * @Description Store a newly created DummyModelClass in storage.
     *
     * @Author      yaangvu
     * @Date        DummyDate
     *
     * @param Request $request
     *
     * @return JsonResponse
     *
     * @OA\Post(
     *   path="/DummyPath",
     *   operationId="add{{ model }}",
     *   tags={"DummyTag"},
     *   summary="Add {{ model }}",
     *   description="Add {{ model }}",
     *   security={{ "Bearer":{} }},
     *   @OA\RequestBody(
     *     required=true,
     *     @OA\MediaType(
     *        mediaType="application/json",
     *        @OA\Schema(
     *          ref="#/components/schemas/{{ model }}"
     *        ),
     *      ),
     *    ),
     *   @OA\Response(
     *      response=200,
     *      description="Success",
     *      @OA\JsonContent(
     *        ref="#/components/schemas/{{ model }}"
     *      )
     *   ),
     *   @OA\Response(
     *      response=400,
     *      description="Bad Request"
     *    ),
     *   @OA\Response(
     *      response=401,
     *      description="Unauthorized"
     *   ),
     *   @OA\Response(
     *      response=403,
     *      description="Forbidden"
     *    ),
     *   @OA\Response(
     *      response=404,
     *      description="Unauthorized"
     *   ),
     *   @OA\Response(
     *      response=500,
     *      description="Server Error"
     *   ),
     * )
     **/
    public function store(Request $request): JsonResponse
    {
        return parent::store($request); // TODO: Change the autogenerated stub
    }

    /**
     * @Description Update the specified DummyModelClass in storage.
     *
     * @Author      yaangvu
     * @Date        DummyDate
     *
     * @param         $id
     * @param Request $request
     *
     * @return JsonResponse
     *
     * @OA\Patch (
     *   path="/DummyPath/{id}",
     *   operationId="patchUpdate{{ model }}",
     *   tags={"DummyTag"},
     *   summary="Update patch {{ model }}",
     *   description="Update patch {{ model }}",
     *   security={{ "Bearer":{} }},
     *   @OA\Parameter(
     *       ref="#/components/parameters/asset--sid",
     *   ),
     *   @OA\RequestBody(
     *     required=true,
     *     @OA\JsonContent(
     *        ref="#/components/schemas/{{ model }}"
     *     )
     *    ),
     *   @OA\Response(
     *      response=200,
     *      description="Success",
     *      @OA\JsonContent(
     *        ref="#/components/schemas/{{ model }}",
     *      )
     *   ),
     *   @OA\Response(
     *      response=400,
     *      description="Bad Request"
     *    ),
     *   @OA\Response(
     *      response=401,
     *      description="Unauthorized"
     *   ),
     *   @OA\Response(
     *      response=403,
     *      description="Forbidden"
     *    ),
     *   @OA\Response(
     *      response=404,
     *      description="Unauthorized"
     *   ),
     *   @OA\Response(
     *      response=500,
     *      description="Server Error"
     *    ),
     * )
     **/
    public function update($id, Request $request): JsonResponse
    {
        return parent::update($id, $request); // TODO: Change the autogenerated stub
    }

    /**
     * @Description Put Update the specified DummyModelClass in storage.
     *
     * @Author      yaangvu
     * @Date        DummyDate
     *
     * @param         $id
     * @param Request $request
     *
     * @return JsonResponse
     *
     * @OA\Put (
     *   path="/DummyPath/{id}",
     *   operationId="putUpdate{{ model }}",
     *   tags={"DummyTag"},
     *   summary="Update put {{ model }}",
     *   description="Update put {{ model }}",
     *   security={{ "Bearer":{} }},
     *   @OA\Parameter(
     *       ref="#/components/parameters/asset--sid",
     *   ),
     *   @OA\RequestBody(
     *     required=true,
     *     @OA\JsonContent(
     *       ref="#/components/schemas/{{ model }}"
     *     )
     *    ),
     *   @OA\Response(
     *      response=200,
     *      description="Success",
     *      @OA\JsonContent(
     *        ref="#/components/schemas/{{ model }}",
     *      )
     *   ),
     *   @OA\Response(
     *      response=400,
     *      description="Bad Request"
     *    ),
     *   @OA\Response(
     *      response=401,
     *      description="Unauthorized"
     *   ),
     *   @OA\Response(
     *      response=403,
     *      description="Forbidden"
     *    ),
     *   @OA\Response(
     *      response=404,
     *      description="Unauthorized"
     *   ),
     *   @OA\Response(
     *      response=500,
     *      description="Server Error"
     *   ),
     * )
     **/
    public function putUpdate($id, Request $request): JsonResponse
    {
        return parent::putUpdate($id, $request); // TODO: Change the autogenerated stub
    }

    /**
     * @Description Remove the specified DummyModelClass from storage.
     *
     * @Author      yaangvu
     * @Date        DummyDate
     *
     * @param $id
     *
     * @return JsonResponse
     * @OA\Delete(
     *   path="/DummyPath/{id}",
     *   operationId="deleteById{{ model }}",
     *   tags={"DummyTag"},
     *   summary="Delete by id {{ model }}",
     *   description="Delete by id {{ model }}",
     *   security={{ "Bearer":{} }},
     *   @OA\Parameter(
     *     ref="#/components/parameters/asset--iid",
     *    ),
     *   @OA\Response(
     *      response=200,
     *      description="Success",
     *      @OA\JsonContent(
     *        @OA\Schema(type="boolean"),
     *        @OA\Examples(example="bool", value=true, summary="A boolean value."),
     *      ),
     *   ),
     *   @OA\Response(
     *      response=400,
     *      description="Bad Request"
     *    ),
     *   @OA\Response(
     *      response=401,
     *      description="Unauthorized"
     *   ),
     *   @OA\Response(
     *      response=403,
     *      description="Forbidden"
     *    ),
     *   @OA\Response(
     *      response=404,
     *      description="Unauthorized"
     *   ),
     *   @OA\Response(
     *      response=500,
     *      description="Server Error"
     *   ),
     * )
     */
    public function destroy($id): JsonResponse
    {
        return parent::destroy($id); // TODO: Change the autogenerated stub
    }

    /**
     * @Description Remove the specified DummyModelClass from storage by uuid
     *
     * @Author      yaangvu
     * @Date        DummyDate
     *
     * @param $uuid
     *
     * @return JsonResponse
     *
     * @OA\Delete(
     *   path="/DummyPath/uuid/{uuid}",
     *   operationId="deleteByUuid{{ model }}",
     *   tags={"DummyTag"},
     *   summary="Delete by uuid {{ model }}",
     *   description="Delete by uuid {{ model }}",
     *   security={{ "Bearer":{} }},
     *   @OA\Parameter(
     *     ref="#/components/parameters/asset--uuid",
     *    ),
     *   @OA\Response(
     *      response=200,
     *      description="Success",
     *      @OA\JsonContent(
     *        @OA\Schema(type="boolean"),
     *        @OA\Examples(example="bool", value=true, summary="A boolean value."),
     *      ),
     *   ),
     *   @OA\Response(
     *      response=400,
     *      description="Bad Request"
     *    ),
     *   @OA\Response(
     *      response=401,
     *      description="Unauthorized"
     *   ),
     *   @OA\Response(
     *      response=403,
     *      description="Forbidden"
     *    ),
     *   @OA\Response(
     *      response=404,
     *      description="Unauthorized"
     *   ),
     *   @OA\Response(
     *      response=500,
     *      description="Server Error"
     *   ),
     * )
     */
    public function deleteByUuid($uuid): JsonResponse
    {
        return parent::deleteByUuid($uuid); // TODO: Change the autogenerated stub
    }

    /**
     * @Description Remove the multiple specified DummyModelClass from storage by ids
     *
     * @Author      yaangvu
     * @Date        DummyDate
     *
     * @param Request $request
     *
     * @return JsonResponse
     *
     * @OA\Delete(
     *   path="/DummyPath/delete/ids",
     *   operationId="deleteByIds{{ model }}",
     *   tags={"DummyTag"},
     *   summary="Delete by ids {{ model }}",
     *   description="Delete by ids {{ model }}",
     *   security={{ "Bearer":{} }},
     *   @OA\RequestBody(
     *     required=true,
     *     @OA\JsonContent(
     *          ref="#/components/schemas/propertyID",
     *      )
     *    ),
     *   @OA\Response(
     *      response=200,
     *      description="Success",
     *      @OA\JsonContent(
     *        @OA\Schema(type="boolean"),
     *        @OA\Examples(example="bool", value=true, summary="A boolean value."),
     *      ),
     *   ),
     *   @OA\Response(
     *      response=400,
     *      description="Bad Request"
     *    ),
     *   @OA\Response(
     *      response=401,
     *      description="Unauthorized"
     *   ),
     *   @OA\Response(
     *      response=403,
     *      description="Forbidden"
     *    ),
     *   @OA\Response(
     *      response=404,
     *      description="Unauthorized"
     *   ),
     *   @OA\Response(
     *      response=500,
     *      description="Server Error"
     *   ),
     * )
     */
    public function deleteByIds(Request $request): JsonResponse
    {
        return parent::deleteByIds($request); // TODO: Change the autogenerated stub
    }

    /**
     * @Description Remove the multiple specified DummyModelClass from storage by uuids
     *
     * @Author      yaangvu
     * @Date        DummyDate
     *
     * @param Request $request
     *
     * @return JsonResponse
     * @OA\Delete(
     *   path="/DummyPath/delete/uuids",
     *   operationId="deleteByUuids{{ model }}",
     *   tags={"DummyTag"},
     *   summary="Delete by uuids {{ model }}",
     *   description="Delete by ids {{ model }}",
     *   security={{ "Bearer":{} }},
     *   @OA\RequestBody(
     *     required=true,
     *     @OA\JsonContent(
     *        ref="#/components/schemas/propertyUuid",
     *      )
     *    ),
     *   @OA\Response(
     *      response=200,
     *      description="Success",
     *      @OA\JsonContent(
     *        @OA\Schema(type="boolean"),
     *        @OA\Examples(example="bool", value=true, summary="A boolean value."),
     *      ),
     *   ),
     *   @OA\Response(
     *      response=400,
     *      description="Bad Request"
     *    ),
     *   @OA\Response(
     *      response=401,
     *      description="Unauthorized"
     *   ),
     *   @OA\Response(
     *      response=403,
     *      description="Forbidden"
     *    ),
     *   @OA\Response(
     *      response=404,
     *      description="Not found"
     *   ),
     *   @OA\Response(
     *      response=500,
     *      description="Server Error"
     *   ),
     * )
     */
    public function deleteByUuids(Request $request): JsonResponse
    {
        return parent::deleteByUuids($request); // TODO: Change the autogenerated stub
    }
}
